/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as BlogsIdImport } from "./routes/blogs/$id";

// Create Virtual Routes

const BlogLazyImport = createFileRoute("/blog")();
const IndexLazyImport = createFileRoute("/")();

// Create/Update Routes

const BlogLazyRoute = BlogLazyImport.update({
  path: "/blog",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/blog.lazy").then((d) => d.Route));

const IndexLazyRoute = IndexLazyImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route));

const BlogsIdRoute = BlogsIdImport.update({
  path: "/blogs/$id",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/blog": {
      id: "/blog";
      path: "/blog";
      fullPath: "/blog";
      preLoaderRoute: typeof BlogLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/blogs/$id": {
      id: "/blogs/$id";
      path: "/blogs/$id";
      fullPath: "/blogs/$id";
      preLoaderRoute: typeof BlogsIdImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexLazyRoute;
  "/blog": typeof BlogLazyRoute;
  "/blogs/$id": typeof BlogsIdRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexLazyRoute;
  "/blog": typeof BlogLazyRoute;
  "/blogs/$id": typeof BlogsIdRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexLazyRoute;
  "/blog": typeof BlogLazyRoute;
  "/blogs/$id": typeof BlogsIdRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/blog" | "/blogs/$id";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/blog" | "/blogs/$id";
  id: "__root__" | "/" | "/blog" | "/blogs/$id";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  BlogLazyRoute: typeof BlogLazyRoute;
  BlogsIdRoute: typeof BlogsIdRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  BlogLazyRoute: BlogLazyRoute,
  BlogsIdRoute: BlogsIdRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/blog",
        "/blogs/$id"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/blog": {
      "filePath": "blog.lazy.tsx"
    },
    "/blogs/$id": {
      "filePath": "blogs/$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
